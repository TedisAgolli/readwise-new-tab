(()=>{"use strict";async function e(e){return fetch("https://readwise.io/api/v2/books/",{method:"Get",mode:"cors",headers:{Authorization:`TOKEN ${e}`}}).then((e=>e.json())).then((e=>{const t=Object.fromEntries(e.results.map((e=>[e.id,e.cover_image_url])));chrome.storage.local.set(t)}))}chrome.browserAction.onClicked.addListener((function(e){chrome.tabs.update({url:"https://readwise.io/access_token"})})),chrome.runtime.onMessage.addListener((function(t,o,c){return"cached_quote"===t.type?chrome.storage.local.get("cachedQuote",(({cachedQuote:e})=>{c(e)})):"get_highlight"===t.type?(async function(e,t){const o=new URLSearchParams({page_size:"1"});chrome.storage.local.get("cachedTotalHighlightsNumber",(({cachedTotalHighlightsNumber:c})=>{if(c){const e=Math.floor(Math.random()*c);o.set("page",e.toString())}fetch(`https://readwise.io/api/v2/highlights?${o}`,{method:"GET",mode:"cors",headers:{Authorization:`TOKEN ${e}`,contentType:"application/json"}}).then((e=>e.json())).then((e=>{if(e.count>0){const o=e.results[Math.floor(Math.random()*e.results.length)],c=o.book_id;chrome.storage.local.get([`${c}`],(a=>{const s={quote:o.text,id:o.id,cover:a[c]};chrome.storage.local.set({cachedQuote:s}),chrome.storage.local.set({cachedTotalHighlightsNumber:e.count}),t(s)}))}})).catch((e=>console.log(e)))}))}(t.token,c),e(t.token)):"cache_books"===t.type&&e(t.token),!0}))})();